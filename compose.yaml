version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - spring-boot-app-blue
      - spring-boot-app-green


  spring-boot-app-blue:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8081:8080'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/peer_to_peer
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password_12345
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' htpp://localhost:8081 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3


  spring-boot-app-green:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8082:8080'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/peer_to_peer
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password_12345
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' htpp://localhost:8082 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=peer_to_peer'
      - 'POSTGRES_PASSWORD=password_12345'
      - 'POSTGRES_USER=admin'
    ports:
      - '5432:5432'

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - '9100:9100'
  
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    depends_on:
      - spring-boot-app
      - node-exporter
      
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  grafana-storage:
